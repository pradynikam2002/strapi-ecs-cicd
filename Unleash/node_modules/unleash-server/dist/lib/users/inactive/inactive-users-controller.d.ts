import Controller from '../../routes/controller.js';
import { type IUnleashConfig } from '../../types/index.js';
import { type IdsSchema, type InactiveUserSchema, type InactiveUsersSchema } from '../../openapi/index.js';
import type { IAuthRequest } from '../../routes/unleash-types.js';
import type { Response } from 'express';
import type { IUnleashServices } from '../../services/index.js';
export declare class InactiveUsersController extends Controller {
    private readonly logger;
    private inactiveUsersService;
    private openApiService;
    private flagResolver;
    private readonly userInactivityThresholdInDays;
    constructor(config: IUnleashConfig, { inactiveUsersService, openApiService, }: Pick<IUnleashServices, 'inactiveUsersService' | 'openApiService'>);
    getInactiveUsers(_req: IAuthRequest, res: Response<InactiveUsersSchema>): Promise<void>;
    anonymiseUsers(users: InactiveUserSchema[]): InactiveUserSchema[];
    deleteInactiveUsers(req: IAuthRequest<undefined, undefined, IdsSchema>, res: Response<void>): Promise<void>;
}
//# sourceMappingURL=inactive-users-controller.d.ts.map