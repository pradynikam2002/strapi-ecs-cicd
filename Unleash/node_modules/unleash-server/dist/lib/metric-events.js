const REQUEST_TIME = 'request_time';
const SDK_CONNECTION_ID_RECEIVED = 'sdk_connection_id_received';
const DB_TIME = 'db_time';
const FUNCTION_TIME = 'function_time';
const SCHEDULER_JOB_TIME = 'scheduler_job_time';
const FEATURES_CREATED_BY_PROCESSED = 'features_created_by_processed';
const EVENTS_CREATED_BY_PROCESSED = 'events_created_by_processed';
const FRONTEND_API_REPOSITORY_CREATED = 'frontend_api_repository_created';
const PROXY_REPOSITORY_CREATED = 'proxy_repository_created';
const PROXY_FEATURES_FOR_TOKEN_TIME = 'proxy_features_for_token_time';
const STAGE_ENTERED = 'stage-entered';
const USER_LOGIN = 'user-login';
const EXCEEDS_LIMIT = 'exceeds-limit';
const REQUEST_ORIGIN = 'request_origin';
const ADDON_EVENTS_HANDLED = 'addon-event-handled';
const CLIENT_METRICS_NAMEPREFIX = 'client-api-nameprefix';
const CLIENT_METRICS_TAGS = 'client-api-tags';
const CLIENT_FEATURES_MEMORY = 'client_features_memory';
const CLIENT_DELTA_MEMORY = 'client_delta_memory';
const CLIENT_REGISTERED = 'client_registered';
const emitMetricEvent = (eventBus, event, payload) => eventBus.emit(event, payload);
const onMetricEvent = (eventBus, event, listener) => {
    eventBus.on(event, listener);
};
export { REQUEST_TIME, SDK_CONNECTION_ID_RECEIVED, DB_TIME, SCHEDULER_JOB_TIME, FUNCTION_TIME, FEATURES_CREATED_BY_PROCESSED, EVENTS_CREATED_BY_PROCESSED, FRONTEND_API_REPOSITORY_CREATED, PROXY_REPOSITORY_CREATED, PROXY_FEATURES_FOR_TOKEN_TIME, STAGE_ENTERED, USER_LOGIN, EXCEEDS_LIMIT, REQUEST_ORIGIN, ADDON_EVENTS_HANDLED, CLIENT_METRICS_NAMEPREFIX, CLIENT_METRICS_TAGS, CLIENT_FEATURES_MEMORY, CLIENT_DELTA_MEMORY, CLIENT_REGISTERED, emitMetricEvent, onMetricEvent, };
//# sourceMappingURL=metric-events.js.map