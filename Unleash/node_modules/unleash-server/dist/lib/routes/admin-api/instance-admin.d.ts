import type { Response } from 'express';
import type { AuthedRequest } from '../../types/core.js';
import type { IUnleashServices } from '../../services/index.js';
import type { IUnleashConfig } from '../../types/option.js';
import Controller from '../controller.js';
import type { InstanceStatsSigned } from '../../features/instance-stats/instance-stats-service.js';
import type { InstanceAdminStatsSchema } from '../../openapi/index.js';
declare class InstanceAdminController extends Controller {
    private instanceStatsService;
    private openApiService;
    private jsonCsvParser;
    constructor(config: IUnleashConfig, { instanceStatsService, openApiService, }: Pick<IUnleashServices, 'instanceStatsService' | 'openApiService'>);
    instanceStatsExample(): InstanceStatsSigned;
    private serializeStats;
    getStatistics(_: AuthedRequest, res: Response<InstanceAdminStatsSchema>): Promise<void>;
    getStatisticsCSV(_: AuthedRequest, res: Response<InstanceAdminStatsSchema>): Promise<void>;
}
export default InstanceAdminController;
//# sourceMappingURL=instance-admin.d.ts.map