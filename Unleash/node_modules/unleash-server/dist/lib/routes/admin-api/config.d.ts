import type { Response } from 'express';
import type { AuthedRequest } from '../../types/core.js';
import type { IUnleashServices } from '../../services/index.js';
import { type IUnleashConfig } from '../../types/option.js';
import Controller from '../controller.js';
import { type UiConfigSchema } from '../../openapi/spec/ui-config-schema.js';
import type { IAuthRequest } from '../unleash-types.js';
import type { SetCorsSchema } from '../../openapi/spec/set-cors-schema.js';
declare class ConfigController extends Controller {
    private versionService;
    private settingService;
    private frontendApiService;
    private emailService;
    private clientInstanceService;
    private sessionService;
    private maintenanceService;
    private flagResolver;
    private readonly openApiService;
    constructor(config: IUnleashConfig, { versionService, settingService, emailService, openApiService, frontendApiService, maintenanceService, clientInstanceService, sessionService, }: Pick<IUnleashServices, 'versionService' | 'settingService' | 'emailService' | 'openApiService' | 'frontendApiService' | 'maintenanceService' | 'clientInstanceService' | 'sessionService'>);
    getUiConfig(req: AuthedRequest, res: Response<UiConfigSchema>): Promise<void>;
    setCors(req: IAuthRequest<void, void, SetCorsSchema>, res: Response<string>): Promise<void>;
}
export default ConfigController;
//# sourceMappingURL=config.d.ts.map