import type { Request, Response } from 'express';
import type { IUnleashConfig } from '../../types/option.js';
import type { IUnleashServices } from '../../services/index.js';
import Controller from '../controller.js';
import { type ConstraintSchema } from '../../openapi/index.js';
export default class ConstraintController extends Controller {
    private featureService;
    private openApiService;
    private readonly logger;
    constructor(config: IUnleashConfig, { featureToggleService, openApiService, }: Pick<IUnleashServices, 'featureToggleService' | 'openApiService'>);
    validateConstraint(req: Request<void, void, ConstraintSchema>, res: Response): Promise<void>;
}
//# sourceMappingURL=constraints.d.ts.map