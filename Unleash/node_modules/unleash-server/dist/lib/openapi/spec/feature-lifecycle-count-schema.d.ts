import type { FromSchema } from 'json-schema-to-ts';
export declare const featureLifecycleCountSchema: {
    readonly $id: "#/components/schemas/featureLifecycleCountSchema";
    readonly type: "object";
    readonly description: "A number features in each of the lifecycle stages";
    readonly required: readonly ["initial", "preLive", "live", "completed", "archived"];
    readonly additionalProperties: false;
    readonly properties: {
        readonly initial: {
            readonly type: "number";
            readonly example: 1;
            readonly description: "Number of features in the initial stage";
        };
        readonly preLive: {
            readonly type: "number";
            readonly example: 1;
            readonly description: "Number of features in the pre-live stage";
        };
        readonly live: {
            readonly type: "number";
            readonly example: 1;
            readonly description: "Number of features in the live stage";
        };
        readonly completed: {
            readonly type: "number";
            readonly example: 1;
            readonly description: "Number of features in the completed stage";
        };
        readonly archived: {
            readonly type: "number";
            readonly example: 1;
            readonly description: "Number of features in the archived stage";
        };
    };
    readonly components: {
        readonly schemas: {};
    };
};
export type FeatureLifecycleCountSchema = FromSchema<typeof featureLifecycleCountSchema>;
//# sourceMappingURL=feature-lifecycle-count-schema.d.ts.map