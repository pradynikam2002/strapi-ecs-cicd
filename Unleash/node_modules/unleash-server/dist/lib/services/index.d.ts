import type { IUnleashConfig, IUnleashStores } from '../types/index.js';
import FeatureTypeService from './feature-type-service.js';
import EventService from '../features/events/event-service.js';
import HealthService from './health-service.js';
import ProjectService from '../features/project/project-service.js';
import ClientInstanceService from '../features/metrics/instance/instance-service.js';
import ClientMetricsServiceV2 from '../features/metrics/client-metrics/metrics-service-v2.js';
import { CustomMetricsService } from '../features/metrics/custom/custom-metrics-service.js';
import TagTypeService from '../features/tag-type/tag-type-service.js';
import TagService from './tag-service.js';
import StrategyService from './strategy-service.js';
import AddonService from './addon-service.js';
import ContextService from '../features/context/context-service.js';
import VersionService from './version-service.js';
import { EmailService } from './email-service.js';
import { AccessService } from './access-service.js';
import { ApiTokenService } from './api-token-service.js';
import UserService from './user-service.js';
import ResetTokenService from './reset-token-service.js';
import SettingService from './setting-service.js';
import SessionService from './session-service.js';
import UserFeedbackService from './user-feedback-service.js';
import { FeatureToggleService } from '../features/feature-toggle/feature-toggle-service.js';
import EnvironmentService from '../features/project-environments/environment-service.js';
import FeatureTagService from './feature-tag-service.js';
import ProjectHealthService from './project-health-service.js';
import UserSplashService from './user-splash-service.js';
import { SegmentService } from '../features/segment/segment-service.js';
import { OpenApiService } from './openapi-service.js';
import { ClientSpecService } from './client-spec-service.js';
import { PlaygroundService } from '../features/playground/playground-service.js';
import { GroupService } from './group-service.js';
import { FrontendApiService } from '../features/frontend-api/frontend-api-service.js';
import EdgeService from './edge-service.js';
import PatService from './pat-service.js';
import { PublicSignupTokenService } from './public-signup-token-service.js';
import { LastSeenService } from '../features/metrics/last-seen/last-seen-service.js';
import { InstanceStatsService } from '../features/instance-stats/instance-stats-service.js';
import { FavoritesService } from './favorites-service.js';
import MaintenanceService from '../features/maintenance/maintenance-service.js';
import { AccountService } from './account-service.js';
import { SchedulerService } from '../features/scheduler/scheduler-service.js';
import { ProjectInsightsService } from '../features/project-insights/project-insights-service.js';
import type { Knex } from 'knex';
import type { Db } from '../db/db.js';
import { type WithTransactional } from '../db/transaction.js';
import ConfigurationRevisionService from '../features/feature-toggle/configuration-revision-service.js';
import EventAnnouncerService from './event-announcer-service.js';
import { DependentFeaturesService } from '../features/dependent-features/dependent-features-service.js';
import { ClientFeatureToggleService } from '../features/client-feature-toggles/client-feature-toggle-service.js';
import { FeatureSearchService } from '../features/feature-search/feature-search-service.js';
import { InactiveUsersService } from '../users/inactive/inactive-users-service.js';
import { JobService } from '../features/scheduler/job-service.js';
import { UserSubscriptionsService } from '../features/user-subscriptions/user-subscriptions-service.js';
import { FeatureLifecycleService } from '../features/feature-lifecycle/feature-lifecycle-service.js';
import { FeatureLifecycleReadModel } from '../features/feature-lifecycle/feature-lifecycle-read-model.js';
import { IntegrationEventsService } from '../features/integration-events/integration-events-service.js';
import { OnboardingService } from '../features/onboarding/onboarding-service.js';
import { PersonalDashboardService } from '../features/personal-dashboard/personal-dashboard-service.js';
import { ProjectStatusService } from '../features/project-status/project-status-service.js';
import { UniqueConnectionService } from '../features/unique-connection/unique-connection-service.js';
import type { IFeatureLifecycleReadModel, ISegmentService } from '../internals.js';
import type { IExportService, IImportService } from '../features/export-import-toggles/export-import-service.js';
import type { IPrivateProjectChecker } from '../features/private-project/privateProjectCheckerType.js';
import { UnknownFlagsService } from '../features/metrics/unknown-flags/unknown-flags-service.js';
import type FeatureLinkService from '../features/feature-links/feature-link-service.js';
export declare const createServices: (stores: IUnleashStores, config: IUnleashConfig, db?: Db) => IUnleashServices;
export { FeatureTypeService, EventService, HealthService, ProjectService, ClientInstanceService, ClientMetricsServiceV2, TagTypeService, TagService, StrategyService, AddonService, ContextService, VersionService, EmailService, AccessService, ApiTokenService, UserService, ResetTokenService, SettingService, SessionService, UserFeedbackService, FeatureToggleService, EnvironmentService, FeatureTagService, ProjectHealthService, UserSplashService, SegmentService, OpenApiService, ClientSpecService, PlaygroundService, GroupService, FrontendApiService, EdgeService, PatService, PublicSignupTokenService, LastSeenService, InstanceStatsService, FavoritesService, SchedulerService, DependentFeaturesService, ClientFeatureToggleService, FeatureSearchService, ProjectInsightsService, JobService, FeatureLifecycleService, IntegrationEventsService, OnboardingService, PersonalDashboardService, ProjectStatusService, UserSubscriptionsService, UniqueConnectionService, FeatureLifecycleReadModel, UnknownFlagsService, };
export interface IUnleashServices {
    transactionalAccessService: WithTransactional<AccessService>;
    accessService: AccessService;
    accountService: AccountService;
    addonService: AddonService;
    apiTokenService: ApiTokenService;
    clientInstanceService: ClientInstanceService;
    clientMetricsServiceV2: ClientMetricsServiceV2;
    customMetricsService: CustomMetricsService;
    contextService: ContextService;
    transactionalContextService: WithTransactional<ContextService>;
    emailService: EmailService;
    environmentService: EnvironmentService;
    transactionalEnvironmentService: WithTransactional<EnvironmentService>;
    eventService: EventService;
    edgeService: EdgeService;
    featureTagService: FeatureTagService;
    featureToggleService: FeatureToggleService;
    featureTypeService: FeatureTypeService;
    groupService: GroupService;
    healthService: HealthService;
    projectHealthService: ProjectHealthService;
    projectService: ProjectService;
    transactionalProjectService: WithTransactional<ProjectService>;
    playgroundService: PlaygroundService;
    frontendApiService: FrontendApiService;
    publicSignupTokenService: PublicSignupTokenService;
    resetTokenService: ResetTokenService;
    sessionService: SessionService;
    settingService: SettingService;
    strategyService: StrategyService;
    tagService: TagService;
    tagTypeService: TagTypeService;
    transactionalTagTypeService: WithTransactional<TagTypeService>;
    userFeedbackService: UserFeedbackService;
    userService: WithTransactional<UserService>;
    versionService: VersionService;
    userSplashService: UserSplashService;
    segmentService: ISegmentService;
    openApiService: OpenApiService;
    clientSpecService: ClientSpecService;
    patService: PatService;
    lastSeenService: LastSeenService;
    instanceStatsService: InstanceStatsService;
    favoritesService: FavoritesService;
    maintenanceService: MaintenanceService;
    exportService: IExportService;
    importService: WithTransactional<IImportService>;
    configurationRevisionService: ConfigurationRevisionService;
    schedulerService: SchedulerService;
    eventAnnouncerService: EventAnnouncerService;
    transactionalFeatureToggleService: WithTransactional<FeatureToggleService>;
    transactionalGroupService: (db: Knex.Transaction) => GroupService;
    privateProjectChecker: IPrivateProjectChecker;
    dependentFeaturesService: DependentFeaturesService;
    transactionalDependentFeaturesService: WithTransactional<DependentFeaturesService>;
    clientFeatureToggleService: ClientFeatureToggleService;
    featureSearchService: FeatureSearchService;
    inactiveUsersService: InactiveUsersService;
    projectInsightsService: ProjectInsightsService;
    jobService: JobService;
    featureLifecycleService: FeatureLifecycleService;
    transactionalFeatureLifecycleService: WithTransactional<FeatureLifecycleService>;
    integrationEventsService: IntegrationEventsService;
    onboardingService: OnboardingService;
    personalDashboardService: PersonalDashboardService;
    projectStatusService: ProjectStatusService;
    transactionalUserSubscriptionsService: WithTransactional<UserSubscriptionsService>;
    uniqueConnectionService: UniqueConnectionService;
    featureLifecycleReadModel: IFeatureLifecycleReadModel;
    transactionalFeatureLinkService: WithTransactional<FeatureLinkService>;
    featureLinkService: FeatureLinkService;
    unknownFlagsService: UnknownFlagsService;
}
//# sourceMappingURL=index.d.ts.map