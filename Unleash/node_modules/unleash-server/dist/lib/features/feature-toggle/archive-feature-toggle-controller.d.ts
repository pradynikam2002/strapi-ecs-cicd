import type { Response } from 'express';
import type { IUnleashConfig } from '../../types/option.js';
import type { IUnleashServices } from '../../services/index.js';
import Controller from '../../routes/controller.js';
import type { IAuthRequest } from '../../routes/unleash-types.js';
export default class ArchiveController extends Controller {
    private featureService;
    private transactionalFeatureToggleService;
    private openApiService;
    constructor(config: IUnleashConfig, { transactionalFeatureToggleService, featureToggleService, openApiService, }: Pick<IUnleashServices, 'transactionalFeatureToggleService' | 'featureToggleService' | 'openApiService'>);
    deleteFeature(req: IAuthRequest<{
        featureName: string;
    }>, res: Response<void>): Promise<void>;
    reviveFeature(req: IAuthRequest<{
        featureName: string;
    }>, res: Response<void>): Promise<void>;
}
//# sourceMappingURL=archive-feature-toggle-controller.d.ts.map