import type { IFeatureToggleQuery, ISegmentReadModel, IUnleashConfig, IUnleashStores } from '../../types/index.js';
import type { FeatureConfigurationClient } from '../feature-toggle/types/feature-toggle-strategies-store-type.js';
import type { ClientFeatureToggleDelta } from './delta/client-feature-toggle-delta.js';
import type { ClientFeaturesDeltaSchema } from '../../openapi/index.js';
export declare class ClientFeatureToggleService {
    private logger;
    private clientFeatureToggleStore;
    private segmentReadModel;
    private clientFeatureToggleDelta;
    constructor({ clientFeatureToggleStore, }: Pick<IUnleashStores, 'clientFeatureToggleStore'>, segmentReadModel: ISegmentReadModel, clientFeatureToggleCache: ClientFeatureToggleDelta | null, { getLogger }: Pick<IUnleashConfig, 'getLogger' | 'flagResolver'>);
    getActiveSegmentsForClient(): Promise<import("../../types/model.js").IClientSegment[]>;
    getClientDelta(revisionId: number | undefined, query: IFeatureToggleQuery): Promise<ClientFeaturesDeltaSchema | undefined>;
    getClientFeatures(query?: IFeatureToggleQuery): Promise<FeatureConfigurationClient[]>;
}
//# sourceMappingURL=client-feature-toggle-service.d.ts.map