import { type IUnleashConfig, type IUnleashStores } from '../../types/index.js';
import type { IUnleashServices } from '../../services/index.js';
import Controller from '../../routes/controller.js';
import type { Request, Response } from 'express';
import { type FeatureLifecycleCountSchema } from '../../openapi/spec/feature-lifecycle-count-schema.js';
export default class FeatureLifecycleCountController extends Controller {
    private featureLifecycleReadModel;
    private openApiService;
    constructor(config: IUnleashConfig, { openApiService }: Pick<IUnleashServices, 'openApiService'>, { featureLifecycleReadModel, }: Pick<IUnleashStores, 'featureLifecycleReadModel'>);
    getStageCount(_: Request<any, any, any, any>, res: Response<FeatureLifecycleCountSchema>): Promise<void>;
}
//# sourceMappingURL=feature-lifecycle-count-controller.d.ts.map