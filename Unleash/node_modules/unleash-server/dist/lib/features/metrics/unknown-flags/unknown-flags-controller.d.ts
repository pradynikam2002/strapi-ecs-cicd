import type { Response } from 'express';
import { type UnknownFlagsResponseSchema } from '../../../openapi/index.js';
import Controller from '../../../routes/controller.js';
import type { IAuthRequest } from '../../../routes/unleash-types.js';
import type { IUnleashConfig } from '../../../types/option.js';
import type { IUnleashServices } from '../../../services/index.js';
export default class UnknownFlagsController extends Controller {
    private unknownFlagsService;
    private flagResolver;
    private openApiService;
    constructor(config: IUnleashConfig, { unknownFlagsService, openApiService, }: Pick<IUnleashServices, 'unknownFlagsService' | 'openApiService'>);
    getUnknownFlags(_: IAuthRequest, res: Response<UnknownFlagsResponseSchema>): Promise<void>;
}
//# sourceMappingURL=unknown-flags-controller.d.ts.map