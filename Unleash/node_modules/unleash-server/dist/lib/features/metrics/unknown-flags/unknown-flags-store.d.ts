import type { Db } from '../../../db/db.js';
import type { LogProvider } from '../../../logger.js';
export type UnknownFlag = {
    name: string;
    appName: string;
    seenAt: Date;
    environment: string;
};
export type QueryParams = {
    limit?: number;
    orderBy?: {
        column: string;
        order: 'asc' | 'desc';
    }[];
};
export interface IUnknownFlagsStore {
    insert(flags: UnknownFlag[]): Promise<void>;
    getAll(params?: QueryParams): Promise<UnknownFlag[]>;
    clear(hoursAgo: number): Promise<void>;
    deleteAll(): Promise<void>;
    count(): Promise<number>;
}
export declare class UnknownFlagsStore implements IUnknownFlagsStore {
    private db;
    private logger;
    constructor(db: Db, getLogger: LogProvider);
    insert(flags: UnknownFlag[]): Promise<void>;
    getAll({ limit, orderBy }?: QueryParams): Promise<UnknownFlag[]>;
    clear(hoursAgo: number): Promise<void>;
    deleteAll(): Promise<void>;
    count(): Promise<number>;
}
//# sourceMappingURL=unknown-flags-store.d.ts.map